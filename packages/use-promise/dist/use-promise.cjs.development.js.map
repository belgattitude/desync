{"version":3,"file":"use-promise.cjs.development.js","sources":["../src/use-promise.ts"],"sourcesContent":["import { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport { useDeepCompareMemoize } from '@desync/use-deep-compare-memoize';\n\nexport type QueryKey<TVariables> = TVariables;\nexport type QueryFunction<TResult, TVariables extends object> = (variables: TVariables) => Promise<TResult>;\nexport interface QueryOptions<TResult> {\n  initialData?: TResult;\n  /*\n  manual?: boolean;\n  retry?: boolean | number;\n  retryDelay?: (retryAttempt: number) => number;\n  staleTime?: number;\n  cacheTime?: number;\n  refetchInterval?: false | number;\n  refetchIntervalInBackground?: boolean;\n  refetchOnWindowFocus?: boolean;\n  onError?: (err: any) => void;\n  onSuccess?: (data: TResult) => void;\n  suspense?: boolean;\n  initialData?: TResult;\n  */\n}\n\nexport function usePromise<TResult, TVariables extends object>(\n  promise: QueryFunction<TResult, TVariables>,\n  params: QueryKey<TVariables>,\n  options?: QueryOptions<TResult>\n) {\n  const immediate = true;\n\n  const [error, setError] = useState<Error | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [data, setData] = useState<TResult | null>(options?.initialData ?? null);\n  const [force, forceUpdate] = useReducer((x: number) => x + 1, 0);\n\n  const mounted = useRef<boolean>(true);\n\n  const memoizedParams = useDeepCompareMemoize(params);\n\n  const promiseFn = useCallback(() => {\n    if (mounted.current) {\n      setLoading(true);\n      setData(null);\n      setError(null);\n    }\n    return promise(params)\n      .then(response => {\n        if (mounted.current) {\n          setData(response);\n          setLoading(false);\n        }\n      })\n      .catch(error => {\n        if (mounted.current) {\n          setError(error);\n          setLoading(false);\n        }\n      });\n    // Caution: keep exhaustive deps off here\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [promise, memoizedParams]);\n\n  useEffect(() => {\n    mounted.current = true;\n    if (immediate) {\n      promiseFn();\n    }\n    return () => {\n      // Loading cannot be safely determined here\n      // abort should be a no-op anyway\n      //abortController.abort();\n      mounted.current = false;\n    };\n  }, [force, promiseFn, immediate]);\n\n  const reload = useCallback(() => {\n    forceUpdate();\n  }, [force]);\n\n  return { data, isLoading: loading, error, reload };\n}\n"],"names":["usePromise","promise","params","options","immediate","useState","error","setError","loading","setLoading","initialData","data","setData","useReducer","x","force","forceUpdate","mounted","useRef","memoizedParams","useDeepCompareMemoize","promiseFn","useCallback","current","then","response","useEffect","reload","isLoading"],"mappings":";;;;;;;SAuBgBA,WACdC,SACAC,QACAC;;;AAEA,MAAMC,SAAS,GAAG,IAAlB;;kBAE0BC,cAAQ,CAAe,IAAf;MAA3BC;MAAOC;;mBACgBF,cAAQ,CAAU,IAAV;MAA/BG;MAASC;;mBACQJ,cAAQ,SAAiBF,OAAjB,aAAiBA,OAAjB,uBAAiBA,OAAO,CAAEO,WAA1B,uCAAyC,IAAzC;MAAzBC;MAAMC;;oBACgBC,gBAAU,CAAC,UAACC,CAAD;AAAA,WAAeA,CAAC,GAAG,CAAnB;AAAA,GAAD,EAAuB,CAAvB;MAAhCC;MAAOC;;AAEd,MAAMC,OAAO,GAAGC,YAAM,CAAU,IAAV,CAAtB;AAEA,MAAMC,cAAc,GAAGC,2CAAqB,CAAClB,MAAD,CAA5C;AAEA,MAAMmB,SAAS,GAAGC,iBAAW,CAAC;AAC5B,QAAIL,OAAO,CAACM,OAAZ,EAAqB;AACnBd,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAG,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAL,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AACD,WAAON,OAAO,CAACC,MAAD,CAAP,CACJsB,IADI,CACC,UAAAC,QAAQ;AACZ,UAAIR,OAAO,CAACM,OAAZ,EAAqB;AACnBX,QAAAA,OAAO,CAACa,QAAD,CAAP;AACAhB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KANI,WAOE,UAAAH,KAAK;AACV,UAAIW,OAAO,CAACM,OAAZ,EAAqB;AACnBhB,QAAAA,QAAQ,CAACD,KAAD,CAAR;AACAG,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAZI,CAAP;AAcA;AACD,GArB4B,EAqB1B,CAACR,OAAD,EAAUkB,cAAV,CArB0B,CAA7B;AAuBAO,EAAAA,eAAS,CAAC;AACRT,IAAAA,OAAO,CAACM,OAAR,GAAkB,IAAlB;;AACA,IAAe;AACbF,MAAAA,SAAS;AACV;;AACD,WAAO;AACL;AACA;AACA;AACAJ,MAAAA,OAAO,CAACM,OAAR,GAAkB,KAAlB;AACD,KALD;AAMD,GAXQ,EAWN,CAACR,KAAD,EAAQM,SAAR,EAAmBjB,SAAnB,CAXM,CAAT;AAaA,MAAMuB,MAAM,GAAGL,iBAAW,CAAC;AACzBN,IAAAA,WAAW;AACZ,GAFyB,EAEvB,CAACD,KAAD,CAFuB,CAA1B;AAIA,SAAO;AAAEJ,IAAAA,IAAI,EAAJA,IAAF;AAAQiB,IAAAA,SAAS,EAAEpB,OAAnB;AAA4BF,IAAAA,KAAK,EAALA,KAA5B;AAAmCqB,IAAAA,MAAM,EAANA;AAAnC,GAAP;AACD;;;;"}